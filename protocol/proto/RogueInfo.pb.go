// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.4.0
// source: RogueInfo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RogueInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RogueInfos *RogueInfos `protobuf:"bytes,342,opt,name=RogueInfos,proto3" json:"RogueInfos,omitempty"`
}

func (x *RogueInfo) Reset() {
	*x = RogueInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RogueInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RogueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RogueInfo) ProtoMessage() {}

func (x *RogueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_RogueInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RogueInfo.ProtoReflect.Descriptor instead.
func (*RogueInfo) Descriptor() ([]byte, []int) {
	return file_RogueInfo_proto_rawDescGZIP(), []int{0}
}

func (x *RogueInfo) GetRogueInfos() *RogueInfos {
	if x != nil {
		return x.RogueInfos
	}
	return nil
}

type RogueInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RogueInfoScheduling  *RogueInfoScheduling  `protobuf:"bytes,3,opt,name=RogueInfoScheduling,proto3" json:"RogueInfoScheduling,omitempty"`
	RogueScoreInfo       *RogueScoreRewardInfo `protobuf:"bytes,4,opt,name=rogue_score_info,json=rogueScoreInfo,proto3" json:"rogue_score_info,omitempty"`
	RogueAreaList        []*RogueArea          `protobuf:"bytes,7,rep,name=rogue_area_list,json=rogueAreaList,proto3" json:"rogue_area_list,omitempty"`
	RogueData            *RogueInfoData        `protobuf:"bytes,2013,opt,name=rogue_data,json=rogueData,proto3" json:"rogue_data,omitempty"`
	RogueVirtualItemInfo *RogueVirtualItemInfo `protobuf:"bytes,2,opt,name=rogue_virtual_item_info,json=rogueVirtualItemInfo,proto3" json:"rogue_virtual_item_info,omitempty"`
	RoomMap              *RogueMapInfo         `protobuf:"bytes,1536,opt,name=room_map,json=roomMap,proto3" json:"room_map,omitempty"`
	Status               RogueStatus           `protobuf:"varint,5,opt,name=status,proto3,enum=RogueStatus" json:"status,omitempty"`
	RogueProgress        *RogueCurrentInfo     `protobuf:"bytes,1483,opt,name=rogue_progress,json=rogueProgress,proto3" json:"rogue_progress,omitempty"`
	RogueAeonInfo        *RogueAeonInfo        `protobuf:"bytes,2019,opt,name=rogue_aeon_info,json=rogueAeonInfo,proto3" json:"rogue_aeon_info,omitempty"`
	BaseAvatarIdList     []uint32              `protobuf:"varint,14,rep,packed,name=base_avatar_id_list,json=baseAvatarIdList,proto3" json:"base_avatar_id_list,omitempty"`
	RogueCoin            uint32                `protobuf:"varint,11,opt,name=rogue_coin,json=rogueCoin,proto3" json:"rogue_coin,omitempty"`
}

func (x *RogueInfos) Reset() {
	*x = RogueInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RogueInfo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RogueInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RogueInfos) ProtoMessage() {}

func (x *RogueInfos) ProtoReflect() protoreflect.Message {
	mi := &file_RogueInfo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RogueInfos.ProtoReflect.Descriptor instead.
func (*RogueInfos) Descriptor() ([]byte, []int) {
	return file_RogueInfo_proto_rawDescGZIP(), []int{1}
}

func (x *RogueInfos) GetRogueInfoScheduling() *RogueInfoScheduling {
	if x != nil {
		return x.RogueInfoScheduling
	}
	return nil
}

func (x *RogueInfos) GetRogueScoreInfo() *RogueScoreRewardInfo {
	if x != nil {
		return x.RogueScoreInfo
	}
	return nil
}

func (x *RogueInfos) GetRogueAreaList() []*RogueArea {
	if x != nil {
		return x.RogueAreaList
	}
	return nil
}

func (x *RogueInfos) GetRogueData() *RogueInfoData {
	if x != nil {
		return x.RogueData
	}
	return nil
}

func (x *RogueInfos) GetRogueVirtualItemInfo() *RogueVirtualItemInfo {
	if x != nil {
		return x.RogueVirtualItemInfo
	}
	return nil
}

func (x *RogueInfos) GetRoomMap() *RogueMapInfo {
	if x != nil {
		return x.RoomMap
	}
	return nil
}

func (x *RogueInfos) GetStatus() RogueStatus {
	if x != nil {
		return x.Status
	}
	return RogueStatus_ROGUE_STATUS_NONE
}

func (x *RogueInfos) GetRogueProgress() *RogueCurrentInfo {
	if x != nil {
		return x.RogueProgress
	}
	return nil
}

func (x *RogueInfos) GetRogueAeonInfo() *RogueAeonInfo {
	if x != nil {
		return x.RogueAeonInfo
	}
	return nil
}

func (x *RogueInfos) GetBaseAvatarIdList() []uint32 {
	if x != nil {
		return x.BaseAvatarIdList
	}
	return nil
}

func (x *RogueInfos) GetRogueCoin() uint32 {
	if x != nil {
		return x.RogueCoin
	}
	return 0
}

type RogueInfoScheduling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeginTime int64  `protobuf:"varint,6,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	EndTime   int64  `protobuf:"varint,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	SeasonId  uint32 `protobuf:"varint,11,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
}

func (x *RogueInfoScheduling) Reset() {
	*x = RogueInfoScheduling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RogueInfo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RogueInfoScheduling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RogueInfoScheduling) ProtoMessage() {}

func (x *RogueInfoScheduling) ProtoReflect() protoreflect.Message {
	mi := &file_RogueInfo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RogueInfoScheduling.ProtoReflect.Descriptor instead.
func (*RogueInfoScheduling) Descriptor() ([]byte, []int) {
	return file_RogueInfo_proto_rawDescGZIP(), []int{2}
}

func (x *RogueInfoScheduling) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *RogueInfoScheduling) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RogueInfoScheduling) GetSeasonId() uint32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

var File_RogueInfo_proto protoreflect.FileDescriptor

var file_RogueInfo_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x41, 0x72, 0x65, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x61, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x52, 0x6f, 0x67, 0x75,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x41, 0x65, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x09, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2c, 0x0a, 0x0a, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0xd6,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x52, 0x0a, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xda,
	0x04, 0x0a, 0x0a, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x46, 0x0a,
	0x13, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x52, 0x6f, 0x67,
	0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67,
	0x52, 0x13, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x10, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x0d, 0x72, 0x6f, 0x67,
	0x75, 0x65, 0x41, 0x72, 0x65, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x6f,
	0x67, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0xdd, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x09, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x17, 0x72, 0x6f,
	0x67, 0x75, 0x65, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52, 0x6f,
	0x67, 0x75, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x14, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x6d, 0x61, 0x70, 0x18, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x6f,
	0x67, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x4d, 0x61, 0x70, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x72, 0x6f, 0x67,
	0x75, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0xcb, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x0f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x61, 0x65,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xe3, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x41, 0x65, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d,
	0x72, 0x6f, 0x67, 0x75, 0x65, 0x41, 0x65, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a,
	0x13, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10, 0x62, 0x61, 0x73, 0x65,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x22, 0x6c, 0x0a, 0x13, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_RogueInfo_proto_rawDescOnce sync.Once
	file_RogueInfo_proto_rawDescData = file_RogueInfo_proto_rawDesc
)

func file_RogueInfo_proto_rawDescGZIP() []byte {
	file_RogueInfo_proto_rawDescOnce.Do(func() {
		file_RogueInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_RogueInfo_proto_rawDescData)
	})
	return file_RogueInfo_proto_rawDescData
}

var file_RogueInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_RogueInfo_proto_goTypes = []interface{}{
	(*RogueInfo)(nil),            // 0: RogueInfo
	(*RogueInfos)(nil),           // 1: RogueInfos
	(*RogueInfoScheduling)(nil),  // 2: RogueInfoScheduling
	(*RogueScoreRewardInfo)(nil), // 3: RogueScoreRewardInfo
	(*RogueArea)(nil),            // 4: RogueArea
	(*RogueInfoData)(nil),        // 5: RogueInfoData
	(*RogueVirtualItemInfo)(nil), // 6: RogueVirtualItemInfo
	(*RogueMapInfo)(nil),         // 7: RogueMapInfo
	(RogueStatus)(0),             // 8: RogueStatus
	(*RogueCurrentInfo)(nil),     // 9: RogueCurrentInfo
	(*RogueAeonInfo)(nil),        // 10: RogueAeonInfo
}
var file_RogueInfo_proto_depIdxs = []int32{
	1,  // 0: RogueInfo.RogueInfos:type_name -> RogueInfos
	2,  // 1: RogueInfos.RogueInfoScheduling:type_name -> RogueInfoScheduling
	3,  // 2: RogueInfos.rogue_score_info:type_name -> RogueScoreRewardInfo
	4,  // 3: RogueInfos.rogue_area_list:type_name -> RogueArea
	5,  // 4: RogueInfos.rogue_data:type_name -> RogueInfoData
	6,  // 5: RogueInfos.rogue_virtual_item_info:type_name -> RogueVirtualItemInfo
	7,  // 6: RogueInfos.room_map:type_name -> RogueMapInfo
	8,  // 7: RogueInfos.status:type_name -> RogueStatus
	9,  // 8: RogueInfos.rogue_progress:type_name -> RogueCurrentInfo
	10, // 9: RogueInfos.rogue_aeon_info:type_name -> RogueAeonInfo
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_RogueInfo_proto_init() }
func file_RogueInfo_proto_init() {
	if File_RogueInfo_proto != nil {
		return
	}
	file_RogueStatus_proto_init()
	file_RogueArea_proto_init()
	file_RogueScoreRewardInfo_proto_init()
	file_RogueInfoData_proto_init()
	file_RogueMapInfo_proto_init()
	file_RogueCurrentInfo_proto_init()
	file_RogueVirtualItemInfo_proto_init()
	file_RogueAeonInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_RogueInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RogueInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RogueInfo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RogueInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RogueInfo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RogueInfoScheduling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_RogueInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_RogueInfo_proto_goTypes,
		DependencyIndexes: file_RogueInfo_proto_depIdxs,
		MessageInfos:      file_RogueInfo_proto_msgTypes,
	}.Build()
	File_RogueInfo_proto = out.File
	file_RogueInfo_proto_rawDesc = nil
	file_RogueInfo_proto_goTypes = nil
	file_RogueInfo_proto_depIdxs = nil
}
